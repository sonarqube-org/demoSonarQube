name: API automation workflow

on:
  push:
  workflow_dispatch:
    inputs:
      TEST_ENDPOINT:
        description: "Endpoint for tests"
        required: true
        default: https://dev.github.com
      TEST_BROWSER:
        description: "Browser for tests"
        required: true
        default: chrome
      ALLURE_JOB_RUN_ID:
        description: "ALLURE_JOB_RUN_ID service parameter. Leave blank."
        required: false
      ALLURE_USERNAME:
        description: "ALLURE_USERNAME service parameter. Leave blank"
        required: false
      test-class-name:
        description: "test class name"
        required: true

env:
  ALLURE_ENDPOINT: https://testallure.testops.cloud/
  ALLURE_TOKEN: ${{ secrets.ALLURE_TOKEN }}
  ALLURE_PROJECT_ID: ${{ secrets.ALLURE_PROJECT_ID }}
  ALLURE_TESTPLAN_PATH: "./testplan.json"
  ALLURE_RESULTS: "target/allure-results"
  ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}

jobs:
  all-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: install and configure allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: https://testallure.testops.cloud/
          allure-token: ${{ secrets.ALLURE_TOKEN }}
          allure-project-id: ${{ secrets.ALLURE_PROJECT_ID }}
      - name: Prepare TestPlan
        run: allurectl job-run plan --output-file ${ALLURE_TESTPLAN_PATH}
      - name: Build with Maven
        run: |
          # Use the provided test class name input, or a default value if not provided
          test_class_name=${{ github.event.inputs.test-class-name }}
          if [ -z "$test_class_name" ]; then
            test_class_name="com.manish.api.automation.TestSuiteExecution"
          fi
          allurectl watch -- mvn clean test -Dtest=$test_class_name
          export $( allurectl job-run env)
          printenv |  grep TEST_
          printenv | grep ALLURE_
        env:
          TEST_ENDPOINT: ${{ github.event.inputs.TEST_ENDPOINT }}
          TEST_BROWSER: ${{ github.event.inputs.TEST_BROWSER }}
      - name: Get ALLURE_ environments just to check
        run: |
          printenv | grep ALLURE_
      - name: Get GITHUB_ environments just to check
        run: |
          printenv | grep GITHUB_
